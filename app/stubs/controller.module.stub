<?php

namespace {{ namespace }};

use Modules\Controller;
use Illuminate\Http\Request;
use Modules\{{ module }}\Repositories\{{ repositoryNamespace }};
use Inertia\Inertia;
use Illuminate\Http\RedirectResponse;
use Inertia\Response;
{{ import requests }}

class {{ class }} extends Controller
{
    public function __construct(private {{ repository }} $repository) {}

    /**
     * Display a listing of the resource.
     */
    public function index({{ indexFormRequest }} $request): Response
    {
        ${{ pluralVariable }} = $this->repository->{{ pluralVariable }}($request->validatedObject());
        return Inertia::render("{{ pageModule }}/{{ pageSubModule }}/index", [
            "{{ pluralVariable }}" => ${{ pluralVariable }},
        ]);
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store({{ storeFormRequest }} $request): RedirectResponse
    {
        $this->repository->store{{ model }}($request->validated());
        return redirect()->route('{{ pluralVariable }}.index');
    }

    /**
     * Update the specified resource in storage.
     */
    public function update({{ updateFormRequest }} $request): RedirectResponse
    {
        $validated = $request->validated();
        $this->repository->update{{ model }}($validated['id'], $request->validated());
        return redirect()->route('{{ pluralVariable }}.index');
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{ destroyFormRequest }} $request): RedirectResponse
    {
        $validated = $request->validated();
        $this->repository->destroy{{ model }}($validated['id']);
        return redirect()->route('{{ pluralVariable }}.index');
    }
}
